openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8083
    description: Generated server url
tags:
  - name: Customer
    description: Service customer
paths:
  /api/v1/customer/:
    get:
      tags:
        - Customer
      summary: Get all customers
      operationId: findAll
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
    put:
      tags:
        - Customer
      summary: Update customer
      operationId: updateCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerRequest'
        required: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
    post:
      tags:
        - Customer
      summary: Create a new customer
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
        required: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /api/v1/customer/operations:
    post:
      tags:
        - Customer
      summary: Find operations by product
      operationId: getOperationsByProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BalanceRequest'
        required: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerOperationsResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /api/v1/customer/check/balance:
    post:
      tags:
        - Customer
      summary: Check balance by customer
      operationId: checkBalance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BalanceRequest'
        required: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /api/v1/customer/name/{name}:
    get:
      tags:
        - Customer
      summary: Get a customer by name
      operationId: findByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400':
          description: Bad Request
        '404':
          description: Not found
  /api/v1/customer/id/{id}:
    get:
      tags:
        - Customer
      summary: Get a customer by id
      operationId: findById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400':
          description: Bad Request
        '404':
          description: Not found
  /api/v1/customer/{id}:
    delete:
      tags:
        - Customer
      summary: Delete customer
      operationId: deleteCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json: {}
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
components:
  schemas:
    UpdateCustomerRequest:
      required:
        - category_customer
        - id_customer
        - name
        - number_document
        - type_customer
        - type_document
      type: object
      properties:
        type_customer:
          type: string
          description: Type customer
          example: 1 = Personal | 2 = Empresarial
        category_customer:
          type: string
          description: Category customer
          example: 0 = ninguno | 1 = titular | 2 = firmante
        name:
          type: string
          description: Name customer
          example: Pedro
        surname:
          type: string
          description: Surname customer
          example: Arenas
        type_document:
          type: string
          description: Type document
          example: 1 = DNI | 2 = RUC | 3 = CE
        number_document:
          type: string
          description: Number document
          example: '12345678'
        phone:
          type: string
          description: Phone number
          example: '123456789'
        email:
          type: string
          description: Email
          example: pedro@gmail.com
        id_customer:
          type: string
          description: Id customer
          example: 120cf999662f294fc1234567
    CustomerResponse:
      type: object
      properties:
        type_customer:
          type: string
          description: Type customer
          example: 1 = Personal | 2 = Empresarial
        category_customer:
          type: string
          description: Category customer
          example: 0 = ninguno | 1 = titular | 2 = firmante
        name:
          type: string
          description: Name customer
          example: Pedro
        surname:
          type: string
          description: Surname customer
          example: Arenas
        type_document:
          type: string
          description: Type document
          example: 1 = DNI | 2 = RUC | 3 = CE
        number_document:
          type: string
          description: Number document
          example: '12345678'
        phone:
          type: string
          description: Phone number
          example: '123456789'
        email:
          type: string
          description: Email
          example: pedro@gmail.com
        id_customer:
          type: string
          description: Id customer
          example: 120cf999662f294fc1234567
        registerDate:
          type: string
          description: Register date
          format: date-time
          example: '2023-03-11T21:58:49.101Z'
        status:
          type: boolean
          description: Status customer
          example: true
    BalanceRequest:
      required:
        - codeProduct
        - numberDocument
        - typeDocument
      type: object
      properties:
        typeDocument:
          type: string
          description: Type document
          example: 1 = DNI | 2 = RUC | 3 = CE
        numberDocument:
          type: string
          description: Number document
          example: '12345678'
        codeProduct:
          type: string
          description: Code product
          example: 640c24cd3b905b25cfa2f25a
    CustomerOperationsResponse:
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/CustomerResponse'
        codeProduct:
          type: string
        operations:
          type: array
          items:
            $ref: '#/components/schemas/OpResponse'
        ejemplos:
          type: array
          items:
            $ref: '#/components/schemas/OperationResponse'
    OpResponse:
      type: object
      properties:
        categoryDescription:
          type: string
          description: Category description
          example: Pago crédito
        typeDescription:
          type: string
          description: Type description
          example: Depósito
        description:
          type: string
          description: Description operation
          example: Pago factura.
        source_account:
          type: string
          description: Code source account
          example: 640cc29c60650d1637e040a90
        target_account:
          type: string
          description: Code target account
          example: 123-1234567-0-00
        currency:
          type: string
          description: Currency operation
          example: PEN | USD
        amount:
          type: number
          description: Amount operation
          example: 250
    OperationResponse:
      type: object
      properties:
        id_operation:
          type: string
          description: Balance account
          example: '12350.0'
        register_date:
          type: string
          description: Register date
          format: date-time
          example: '2023-03-11T21:58:49.101Z'
        status:
          type: boolean
          description: Status operation
          example: true
        category:
          type: string
          description: Category operation
          format: byte
        type:
          type: string
          description: Type operation
          format: byte
        description:
          type: string
          description: Description operation
          example: Pago factura.
        source_account:
          type: string
          description: Code source account
          example: 640cc29c60650d1637e040a90
        target_account:
          type: string
          description: Code target account
          example: 123-1234567-0-00
        currency:
          type: string
          description: Currency operation
          example: PEN | USD
        amount:
          type: number
          description: Amount operation
          example: 250
        typeDescription:
          type: string
          description: Type description
          example: Depósito
        categoryDescription:
          type: string
          description: Category description
          example: Pago crédito
    AccountBalanceResponse:
      type: object
      properties:
        code_account:
          type: string
          description: Code account
          example: 193-1853946-0-26
        product:
          type: string
          description: Product code
          example: 640c24cd3b905b25cfa2f25a
        balance:
          type: number
          description: Balance account
          format: double
          example: 12350
    BalanceProductResponse:
      type: object
      properties:
        productCode:
          type: string
          description: Product code
          example: 640c24cd3b905b25cfa2f25a
        productBalance:
          type: number
          description: Balance product
          format: double
          example: 20000
    BalanceResponse:
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/CustomerResponse'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountBalanceResponse'
        balanceProducts:
          type: array
          items:
            $ref: '#/components/schemas/BalanceProductResponse'
    CustomerRequest:
      required:
        - category_customer
        - name
        - number_document
        - type_customer
        - type_document
      type: object
      properties:
        type_customer:
          type: string
          description: Type customer
          example: 1 = Personal | 2 = Empresarial
        category_customer:
          type: string
          description: Category customer
          example: 0 = ninguno | 1 = titular | 2 = firmante
        name:
          type: string
          description: Name customer
          example: Pedro
        surname:
          type: string
          description: Surname customer
          example: Arenas
        type_document:
          type: string
          description: Type document
          example: 1 = DNI | 2 = RUC | 3 = CE
        number_document:
          type: string
          description: Number document
          example: '12345678'
        phone:
          type: string
          description: Phone number
          example: '123456789'
        email:
          type: string
          description: Email
          example: pedro@gmail.com
